@using X.PagedList.Mvc.Core;
@using X.PagedList.Web.Common;
@model X.PagedList.IPagedList<FlightAllViewModel>

<table class="table table-hover">
    <thead>
        <tr>
            <th>Flight Id</th>
            <th>Registration</th>
            <th>Equipment</th>
            <th>Callsign</th>
            <th>Departure Airport</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr id="row-@item.FlightId">
                <td>@item.FlightId</td>
                <td>@item.Registration</td>
                <td>@item.Equipment</td>
                <td>@item.Callsign</td>
                <td>@item.DepartureId</td>
            </tr>
        }
    </tbody>
</table>

<nav aria-label="Page navigation">
    <ul class="pagination justify-content-center">
@{
    // Render the pagination
    var pagination = Html.PagedListPager(Model, page =>
    {
        if (page == 1)
            return Url.Action("All");
        else
            return Url.Action("All", new { page, pageSize = Model.PageSize });
    }, new PagedListRenderOptions
            {
                DisplayLinkToFirstPage = PagedListDisplayMode.IfNeeded,
                ContainerDivClasses = new[] { "pagination" },
                LiElementClasses = new[] { "page-item" },
                PageClasses = new[] { "page-link" },
            });

    @Html.Raw(pagination)
}
    </ul>
</nav>