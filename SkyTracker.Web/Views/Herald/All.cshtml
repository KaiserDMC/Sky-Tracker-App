@using X.PagedList.Mvc.Core;
@using X.PagedList.Web.Common;
@model X.PagedList.IPagedList<HeraldAllViewModel>

@{
    ViewBag.Title = "All current aviation heralds";
}

<h2 class="text-center">@ViewBag.Title</h2>
<hr />

<div class="text-center row">
    <div class="col-12 mb-3 row justify-content-end">
        <div class="col-3">
            <div class="input-group">
                <label for="sortDropdown" class="input-group-text">Sort By:</label>
                <select id="sortDropdown" class="form-select" onchange=" this.options[this.selectedIndex].value && (window.location=this.options[this.selectedIndex].value);">
                    <option value="">-- Select --</option>
                    <option value="@Url.Action("All", "Herald", new {sortType = "date_asc"})">Date Asc &#x2191</option>
                    <option value="@Url.Action("All", "Herald")">Date Desc &#x2193</option>
                    <option value="@Url.Action("All", "Herald", new {sortType = "type_asc"})">Type A-Z &#x2191;</option>
                    <option value="@Url.Action("All", "Herald", new {sortType = "type_desc"})">Type Z-A &#x2193;</option>
                </select>
            </div>
        </div>
    </div>

    <div class="col-12 mb-3 row justify-content-start">
        <div class="col-3">
            <div class="input-group">
                <label for="pageSizeDropdown" class="input-group-text">Items Per Page:</label>

                <select id="pageSizeDropdown" class="form-select" onchange="changePageSize(this.value)">
                    <option value="">-- Select --</option>
                    <option value="10">10</option>
                    <option value="25">25</option>
                    <option value="50">50</option>
                    <option value="100">100</option>
                </select>
            </div>
        </div>
    </div>
</div>

@Html.Partial("_HeraldsPaged", Model)

<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />

    <script>
        var currentPageSize = @Model.PageSize; // Set the initial selected page size value

        // Upon clicking a table row, redirect to the details page
        function bindTableRowClickEvent() {
            $('tr[id^="row-"]').click(function () {
                var rowId = $(this).attr('id');
                var occurrenceId = rowId.replace('row-', '');

                window.location.href = '/Herald/GetDetails?occurrenceId=' + occurrenceId;
            });
        }

        // Apply row coloring based on the type of occurrence
        function applyRowColoring() {
            $('tr[id^="row-"]').each(function () {
                var typeOccurrence = $(this).find('.type-occurrence').text();
                var rowColor = getRowColourClass(typeOccurrence);
                $(this).addClass(rowColor);
            });
        }

        function getRowColourClass(typeOccurrence) {
            // Row colouring based on the type of occurrence
            switch (typeOccurrence) {
                case "Crash":
                    return "table-danger";
                case "Accident":
                    return "table-warning";
                case "Report":
                    return "table-light";
                case "News":
                    return "table-secondary";
                default: //Incident
                    return "table-info";
            }
        }

        // Rebild the table rows after the AJAX call
        $(document).ready(function () {
            bindTableRowClickEvent();
            applyRowColoring();
        });

        // Change the page size and redirect to the first page
        function changePageSize(pageSize) {
            currentPageSize = pageSize; // Update the current page size variable
            var url = '@Url.Action("All", "Herald")';
            url += "?page=1&pageSize=" + pageSize; // Redirect to the first page
            window.location.href = url;
        }
    </script>
}